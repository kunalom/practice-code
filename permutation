/*****************************************permutation of string***************************/
#include<iostream>
using namespace std;
 void permute(string& s, int index, int k){
    if(index==k){
        cout<<s<<" ";
        return;
    }
    else{

    for(int i=0; i<=k; i++){
        swap(s[index],s[i]);
        permute(s,index+1,k);
        swap(s[index],s[i]);
    }
    }
 }
int main(){
    string s="aba";
    int k=s.size();
    permute(s,0,k-1);
    return 0;
}




/****************************************permutation of array**************************************/
#include<bits/stdc++.h>
using namespace std;
vector<vector<int>> ans;

void permute(vector<int> a, int idx){
    if(idx==a.size()){
        ans.push_back(a);
        return;
    }
    for(int i=idx; i<a.size(); i++){
        if((i!=idx) && (a[i]==a[idx])){
            continue;
        }
        swap(a[i],a[idx]);
        permute(a,idx+1);
        swap(a[i],a[idx]);
    }
}

int main(){
    int n;
    cin>>n;
    vector<int> a(n);
    for(auto &i : a){
        cin>>i;
    }
    sort(a.begin(),a.end());
    permute(a,0);
    for(auto v : ans){
        for(auto i : v){
            cout<<i<<" "; 
        }
        cout<<"  ";
    }
    return 0;
}


/**************************************stl function***************************/
#include<bits/stdc++.h>
using namespace std;

int main(){
    int n;
    cin>>n;
    vector<int> a(n);
    vector<vector<int>> ans;
    for(auto &i : a){
        cin>>i;
    }
    sort(a.begin(),a.end());
    do{
        ans.push_back(a);
    }while(next_permutation(a.begin(),a.end()));

    for(auto v : ans){
        for(auto i : v){
            cout<<i<<" ";
        }
        cout<<"  ";
    }
    return 0;
}
